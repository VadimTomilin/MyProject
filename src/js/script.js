'use strict'  // це поки що просто потрібно прописувати спочатку потім расскажу шо воно таке

// одностроковий коментар

/*многостроковий
коментар*/


/*
В JavaScript для того щоб "щось" створити потрібно це "щось" оголосити і в великої кілкості випадків дати цьому ім`я 

наприклад можно оголосити змінну, це робится так:
/////////////////////////////////////////////////
let x                     

// let це так ми оголосили, що це "щось", це самє змінна

// x це ім`я яке ми самі придумали, воно може бути яким захочешь, але краще за все щоб було зрозуміло - що це, наприклад:

let timer // зрозуміло, що це змінна яка буде в собі зберегати якісь данні про таймер

або так:
////////////////////////////////////////////////

const x // const це означає що змінна повинна бути константою, тобто не змінюватися 

наприклад так :

const birthday // змінна в який повинна бути дата народження

............................................................

ми можемо присвоїти змінній значення, в программуванні цей знак = це присвоєння, а це означає, що ми присвоюємо лівій частині до = праву


const birthday = 1997;

поклали число 1997 в константу birthday

ну що, можно вийти з коментаря і почати писати програму

// Программа пойти випити смачного чайку

*/

let enjoy = false; // Одразу перейдем до цікавого в JS є два логічних значення true що означає правду і false, що означає неправду

// так як ми ще не попили чаю, то спочатку насолода буде у нас в значенні false 
// в прикладі вище ми присвоїли змінній з ім`ям enjoy значення яке равно логічному false
// Тепер нам потрібна дія наприклад наповнити чайник водою, але ще потрібно створити цей чайник

let kettle = 0; // Припустим що цифри відображають скільки води можно налити в чайник, а спочатку він пустий

// тепер дія - налити чайник, для дій в js краще за все підходять функції
// Для того щоб створити функцію потрібно написати ключове слово function після чого дати їй ім`я, відкрити круглі і фігурні скобки це виглядає так
// pour з англійскої - налити

function pour () {  // до круглих скобок повернемось пізніше а фігурні це область видимості,
 // це означає що всі змінні які ми захочем створити в функції будуть знаходитись тільки там і доступу до них за скобками ми не матимемо
 // але ми можемо використовувати тут змінні які були створені глобально просто в программі, наприклад можемо використати kettle
 // після того як ми оголосили змінну знов оголошувати її не треба можно просто її використовувати тому let знову не пишемо
kettle = kettle + 1; //щоб було зрозуміло знизу напишу що відбувається в цьому запису
// так як kettle равен 0 то запис виглядає так 0 = 0 + 1
// так як = це присвоєння і воно як знак має найменьший пріорітет серед знаків то спочатку складуємо
// 0+1 виходить  1
// а потім присвоюємо kettle яке було равним 0, одиницю, 
// Щоб було остаточно зрозуміло присвоєння працює як перезапис
// уяви що ми перезаписали kettle тепер він равен одиниці
}; 

// зверху ми описали функцію як вона повинна працювати, але її ще потрібно викликати, щоб вона спрацювала

pour(); // тут ми викликали функцію і вона спрацювала один раз, після одного срабатування kettle став рівен одиниці

console.log(kettle); // ця команда для того щоб перевірити що лежить в скобках, в консолі відобразиться 1 це значення kettle

pour(); // тут ми викликали функцію ще раз, тепер kettle був равний одному і спрацювало так 1 = 1 + 1

//  так як 1+1 равно двом, то цей результат перезаписався в kettle і тепер kettle рівен двом

console.log(kettle); // відобразиться 2 це значення kettle

// Тепер ми вміємо наливати воду в чайник вітаю!!!!!!!!!!!!!!

// Кінець першого розділу
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
